---

################# Palo Deploy New Objects ################
##
## Requirements: Ansible 2.9+ & PanOS Ansible Collection
## Written by: Daniel Bostock
## Contact: contact@danielbostock.com
## Version: 1.0
## License: MIT
## 


- name: Add some service objects to the firewall and put them into a service object group
  hosts: localhost
  connection: local
  gather_facts: False

## Ensure the Palo Alto Ansible Role (Collection) has been installed. There are some requirements as well for the
## role. Often you will get prompted if you need a specific module such as for example paramiko.
## Review documentation here - https://github.com/PaloAltoNetworks/pan-os-ansible

  collections:
    - paloaltonetworks.panos

## These are the var files which is used to create the service objects. Add the objects into here that you
## would like to deploy.
  vars_files:
    - ./service_objects.yml
    - ./service_object_groups.yml

## This variable is referenced with the commit action at the end of the play.

  vars:
    - panos_provider: 
        ip_address: '{{ fw_ip_address }}'
        username: '{{ fw_username }}'
        password: '{{ fw_password }}'
        api_key: '{{ api_key }}'
    - service_objects: ./service_objects.yml
    - service_object_groups: ./service_object_groups.yml

## This admin list is used by the commit action at the end to commit any changes by specific users,
## with this playbook, it will be leveraging fvwadmin1 user only, adjust accordingly.
## Any other commits currently sitting in the Palo's will not be committed if they are under another user.

    - admins:
       - fwadmin1 

  tasks:
  - name: Grab the credentials from ansible-vault
    include_vars: 'vaultfile1'
    #no_log: 'yes'

## This is the beginning of the changes

  - name: Create service objects
    panos_service_object:
      provider: '{{ panos_provider }}'
      name: '{{ item.value.service_name }}'
      destination_port: '{{ item.value.service_port }}'
      description: '{{ item.value.service_description }}'
      state: 'present'
## In order for this to work you need to have an existing an existing tag, so ensure this tag exists
      #tag: ['AnsibleTest']
    with_dict: "{{ service_objects }}"

  - name: Create a service object group for these services and add them into the group
    panos_service_group:
      provider: '{{ panos_provider }}'
      name: '{{ item.value.service_group_name }}'
      value: '{{ item.value.service_objects }}'
      commit: no
    with_dict: "{{ service_object_groups }}"

## This will commit these changes 

  post_tasks:

  - name: Commit pending Panorama changes for specified admin list
    panos_commit:
      provider: "{{ panos_provider }}"
      admins: "{{ admins }}"